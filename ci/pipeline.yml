groups:
- name: docker-boshrelease
  jobs:
  - test-docker-boshrelease
  - test-docker-boshrelease-pr
  - release-candidate
  - ship-it
  - bump-major
  - bump-minor
  - bump-docker-components

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: github-release-with-version-filtering
  type: docker-image
  source:
    repository: pcfkubo/github-release-resource
    tag: filter-version

resources:
- name: git-docker-boshrelease
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/docker-boshrelease
    branch: master
    private_key: ((git-ssh-key.private_key))

- name: git-pull-requests
  type: pull-request
  source:
    repository: cloudfoundry-incubator/docker-boshrelease
    access_token: ((github-token-key))

- name: version
  type: semver
  source:
    driver: gcs
    bucket: kubo-pipeline-store
    key: versions/docker-boshrelease-version
    json_key: ((gcs-json-key))
    initial_version: 31.0.1

- name: github-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: docker-boshrelease
    access_token: ((github-token-key))

- name: s3-tarball
  type: gcs
  source:
    bucket: docker-boshrelease
    json_key: ((gcs-json-key))
    regexp: docker-(.*).tgz

- name: ubuntu-bionic-stemcell-gcp
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-bionic-go_agent

- name: git-docker-ce-release
  type: github-release
  source:
    owner: docker
    repository: docker-ce
    tag_filter: v19.03.(.*)
    access_token: ((github-token-key))

jobs:
- name: test-docker-boshrelease
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: git-docker-boshrelease
      trigger: true
    - get: stemcell
      resource: ubuntu-bionic-stemcell-gcp
  - task: test-docker-boshrelease
    file: git-docker-boshrelease/ci/tasks/test-docker-boshrelease.yml
    params: &test_docker_boshrelease_params
      PROXY_PRIVATE_KEY: ((docker-bosh-env-ssh.private_key))
      PROXY_USERNAME: ((docker-bosh-env-username))
      PROXY_IP: ((docker-bosh-env-ip))
      BOSH_CA_CERT: ((docker-bosh-env-cert.certificate))
      BOSH_CLIENT: ((docker-bosh-env-client))
      BOSH_CLIENT_SECRET: ((docker-bosh-env-client-secret))
      BOSH_DEPLOYMENT: ((docker-bosh-env-deployment))
      BOSH_ENVIRONMENT: ((docker-bosh-env-environment))
      MANIFEST_PATH: git-docker-boshrelease/manifests/containers/example.yml
  - task: test-docker-boshrelease-swarm
    file: git-docker-boshrelease/ci/tasks/test-docker-boshrelease.yml
    params:
      <<: *test_docker_boshrelease_params
      BOSH_DEPLOYMENT: docker-swarm-testflight
      MANIFEST_PATH: git-docker-boshrelease/manifests/swarm/docker-swarm.yml
  - task: run-integration-tests
    file: git-docker-boshrelease/ci/tasks/test-docker-boshrelease.yml
    params:
      <<: *test_docker_boshrelease_params
      BOSH_DEPLOYMENT: docker-integration-tests
      MANIFEST_PATH: git-docker-boshrelease/manifests/testing/example.yml
      RUN_TESTS: true
  - task: test-minimal-deployment
    file: git-docker-boshrelease/ci/tasks/test-docker-boshrelease.yml
    params:
      <<: *test_docker_boshrelease_params
      BOSH_DEPLOYMENT: docker-minimal-tests
      MANIFEST_PATH: git-docker-boshrelease/manifests/testing/minimal.yml

- name: test-docker-boshrelease-pr
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: git-docker-boshrelease
    - get: git-pull-requests
      version: every
      trigger: true
    - get: stemcell
      resource: ubuntu-bionic-stemcell-gcp
  - put: git-pull-requests
    params:
      path: git-pull-requests
      status: pending
  - task: test-docker-boshrelease
    file: git-docker-boshrelease/ci/tasks/test-docker-boshrelease-pr.yml
    params:
      <<: *test_docker_boshrelease_params
      BOSH_DEPLOYMENT: docker-testflight-pr
      MANIFEST_PATH: git-pull-requests/manifests/containers/example.yml
    on_failure:
      put: git-pull-requests
      params:
        path: git-pull-requests
        status: failure
    on_success:
      put: git-pull-requests
      params:
        path: git-pull-requests
        status: success
  - task: test-docker-boshrelease-swarm
    file: git-docker-boshrelease/ci/tasks/test-docker-boshrelease-pr.yml
    params:
      <<: *test_docker_boshrelease_params
      BOSH_DEPLOYMENT: docker-swarm-testflight-pr
      MANIFEST_PATH: git-pull-requests/manifests/swarm/docker-swarm.yml
  - task: run-integration-tests
    file: git-docker-boshrelease/ci/tasks/test-docker-boshrelease-pr.yml
    params:
      <<: *test_docker_boshrelease_params
      BOSH_DEPLOYMENT: docker-integration-tests
      MANIFEST_PATH: git-docker-boshrelease/manifests/testing/example.yml
      RUN_TESTS: true

- name: release-candidate
  public: true
  plan:
  - in_parallel:
    - get: git-docker-boshrelease
      passed: [ test-docker-boshrelease ]
      trigger: true
    - get: version
      params:
        pre: rc
      trigger: true

- name: bump-minor
  public: true
  plan:
  - get: version
    params:
      bump: minor
  - put: version
    params:
      file: version/number

- name: bump-major
  public: true
  plan:
  - get: version
    params:
      bump: major
  - put: version
    params:
      file: version/number

- name: ship-it
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: version
      params:
        bump: final
      passed: [ release-candidate ]
    - get: git-docker-boshrelease
      passed: [ release-candidate ]
  - task: release
    file: git-docker-boshrelease/ci/tasks/ship-it.yml
    params:
      GCS_JSON_KEY: ((docker-bosh-gcs-key))
      BRANCH: master
      GIT_EMAIL: "cfcr+cibot@pivotal.io"
      GIT_NAME: "CFCR CI BOT"
      GITHUB_OWNER: cloudfoundry-incubator
      NOTIFICATION_OUT: notifications
      RELEASE_ROOT: gh
      REPO_OUT: pushme
      REPO_ROOT: git-docker-boshrelease
      VERSION_FROM: version/number
  - put: git-docker-boshrelease
    params:
      rebase: true
      repository: pushme/git-docker-boshrelease
  - put: s3-tarball
    params:
      file: gh/artifacts/docker-*.tgz
  - put: github-release
    params:
      body: gh/notes.md
      globs:
      - gh/artifacts/*
      name: gh/name
      tag: gh/tag
  - put: version
    params:
      bump: patch

- name: bump-docker-components
  plan:
  - get: git-docker-boshrelease
  - get: git-docker-ce-release
    trigger: true
    params:
      include_source_tarball: true
  - task: update-docker
    file: git-docker-boshrelease/ci/tasks/bump-docker-version.yml
    params:
      GCS_JSON_KEY: ((docker-bosh-gcs-key))
  - put: git-docker-boshrelease
    params:
      repository: git-docker-boshrelease-output
